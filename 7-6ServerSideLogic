 var userDetaqils = context.WorkbasketTaskUsers;
                List<TaskInfo> NewTaskList = new List<TaskInfo>();
                try
                {
                    foreach( var task in TaskList )
                    {

                        var _taskList = context.WorkbasketTaskUsers.Where(x => x.WorkbasketTaskId == task.WorkbasketTaskId && x.WFLevel == task.WFLevel && x.EndDateInt != null);
                        DateTime? taskDate = new DateTime();
                        int _maxWLevel = 0;
                        int _maxWorkDay = 0;
                        if (_taskList.Count() == 0)
                        {
                            var listForFindMaxLevel =(from u in context.WorkbasketTaskUsers
                                              where 
                                                   ( u.WorkbasketTaskId == task.WorkbasketTaskId 
                                                    && u.EndDateInt != null)
                                              select new  
                                              {  WFLevel =u.WFLevel == null ? 0 : u.WFLevel }).ToList();
                          //  var _maxWLevel = context.WorkbasketTaskUsers.Where(x => x.WorkbasketTaskId == task.WorkbasketTaskId && task.EndDateInt != null).Max(x => x.WFLevel);

                            if (listForFindMaxLevel.Count > 0)
                                _maxWLevel = listForFindMaxLevel.Max(x => x.WFLevel);

                           

                            if (_maxWLevel != 0)
                            {
                                taskDate = context.WorkbasketTaskUsers.Where(x => x.WorkbasketTaskId == task.WorkbasketTaskId && x.WFLevel == _maxWLevel).First().EndDateInt;
                            }
                            else
                            {
                                var listWorkDay = context.PeriodDays.Where(x => x.Id == 94).Select(x => x.WorkDay).ToList();

                                _maxWorkDay = listWorkDay.Count() > 0 ?  listWorkDay.Max(x => x.Value): 0 ;

                                 taskDate = context.PeriodDays.Where(x => x.Id == PeriodId && x.WorkDay == _maxWorkDay).FirstOrDefault().CalenderDate;
                            }
                        }
                        task.EndDateInt = _taskList.Count() == 0 ? taskDate : _taskList.FirstOrDefault().EndDateInt;
                        NewTaskList.Add(task);
                    }
                }
                catch( Exception ex )
                {

                }
