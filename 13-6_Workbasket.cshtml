@using ECloseWebApp.Models;
@using ECloseWebApp.BuisnessEntities;
@using ECloseBL.Entities;

<div id="divBack" class="pull-right">
    <button type="submit" id="btnBack" class="btn btn-secondary">
        Back
    </button>
</div>
@{
    Html.RenderPartial("~/Views/Dashboard/_RowClickForWorkItems.cshtml");
}


<div id="divWorkbasket">

    <div class="panel panel-white">
        <div class="panel-body">

            <div class="col-md-4">
                <div class="form-group">
                    <label>Team</label>
                    <input type="text" value="" id="textTeam" readonly class="form-control" />
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <label>Task</label>:<input type="text" value="" id="textTaskName" readonly class="form-control" />
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <label>Status</label>:<input type="text" value="" id="textStatus" readonly class="form-control" />
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <label>Workflow</label>:<input type="text" value="" id="textWorkflow" readonly class="form-control" />
                </div>
            </div>



            <div class="col-md-4">
                <div class="form-group">
                    <label>Next Approver</label>:<input type="text" value="" id="textNextApprover" readonly class="form-control" />
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <label>Current Level</label>:<input type="text" value="" id="textCurrentLevel" readonly class="form-control" />
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <label>Period</label>:<input type="text" value="" id="textPeriod" readonly class="form-control" />
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <label>Indicator</label>:<img id="imgRagStatus" src="" />
                </div>
            </div>
        </div>
    </div>

</div>

<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <button id="MultiWBTaskSubmit" class="btn btn-primary margin-top" title="Submit">Submit</button>
        </div>
    </div>
</div>
<div id="divReconciliationFile">
    <div id="divFileUploading" class="row">
        <div class="col-md-12">
            <div class="form-group">
                <label title="upload file">
                    Upload File :
                </label>

                <div id="progress" class="loading-bg" style="display:none;position:fixed;background:rgba(255, 255, 255, 0.7);width:100%;height:100%;left:0;top:0;z-index:3;">
                    <img id="progress_image" src='@Url.Content("~/Scripts/Template/adminlte/img/loader.gif")' alt="">
                    @*Please wait. Uploading in progressâ€¦*@
                </div>
                <div id="fileDialog" class="input-group">
                    <input type="hidden" id="WorkbasketTaskIdForFileUploading" />
                    <input type="file" multiple name="FileUpload" id="uploadFile" class="form-control" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />@*onchange="check_extension(this.value,'btnUploadFile');"*@
                    <span class="input-group-btn">
                        <input type="submit" name="Upload" id="btnUploadFile" value="Upload" class="btn btn-primary" onclick="UploadFile()" />@*disabled="disabled"*@

                    </span>
                </div>
            </div>
        </div>
    </div>
    <div id="divTaskFile">

    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <div id="divWFAction" class="row" hidden="hidden">
                    @{
                        Html.RenderPartial("~/Views/Workbasket/_WFAction.cshtml");
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="clearfix"></div>
    <div class="col-md-12">
        <div class="form-group">
            <div id="divWorkflowChart" class="row">
            </div>
        </div>
    </div>
    <div class="clearfix"></div>

</div>
<div id="accordion" style="clear: right; margin-top: 10px; display: none">
    <h5>Action History(<span id="spnActionHistory">0</span>) </h5>
    <div id="divActionHistory" class="auto-height">
    </div>
    <h5>Dependancy(<span id="spnDependancy">0</span>)</h5>
    <div id="divDependsOnTask" class="auto-height">
    </div>
</div>


<script type="text/javascript">

    //---Show  reasons DD when Action=Hold/reject
    function SetReasonsForActionDD(workitemRowId, actionSelected) {
        var wip = '@Enums.WorkbasketAction.WIP.ToString()';
        if (actionSelected != wip) {
            var row = $('#divEntity').jtable('getRowByKey', workitemRowId);
            row.find('#reasonId').val('');
            row.find('#comments').val('');
            $("#commentsAgainstActionDD").val('');
            $('#reasonModalForActionDD').modal('show');
            GetReasonOptionsForActionDD('@SessionWrapper.TenantId', actionSelected, workitemRowId);
            return false;
        }
    }
    //----------------------------------------
    $(document).ready(function () {

        // Multiple submit------------------
        $('#MultiWBTaskSubmit').click(function () {
            var tokenId = '@Html.AntiForgeryToken()';
            var approve = '@Enums.WorkbasketAction.Approve.ToString()';
            var wip = '@Enums.WorkbasketAction.WIP.ToString()';
            var $selectedRows = $('#divEntity').jtable('selectedRows');
            var wbTaskWithAction = [
            ];
            if ($selectedRows.length > 0) {
                //Show selected rows
                $selectedRows.each(function () {
                    var record = $(this).data('record');
                    var row = $('#divEntity').jtable('getRowByKey', record.Id);
                    if (!row.find('input:checkbox')[0].disabled) {
                        var holdRsn = 0
                        var actionSubmittedAgainstWBTaskId = row.find('#actiondd').val();
                        if (row.find('#actiondd').val() == '0') {
                            alert('Please select action to take against selected task.');
                            return false;
                        }

                        if (row.find('#reasonId').val() == '' && actionSubmittedAgainstWBTaskId != approve && actionSubmittedAgainstWBTaskId != wip && actionSubmittedAgainstWBTaskId != close) {
                            alert('Please select reason.');
                            row.find('#actiondd').val('0');
                            return false;
                        }
                        if (row.find('#reasonId').val() != '') {
                            holdRsn = row.find('#reasonId').val();
                        }
                        wbTaskWithAction.push({ "Id": record.Id, "ActionSubmittedAgainstWBTaskId": actionSubmittedAgainstWBTaskId, "ReasonId": holdRsn, "Comments": row.find('#comments').val() });
                    }
                });

                if (wbTaskWithAction.length == 0) {
                    return false;
                }
            }
            else {
                return false;
            }

            alert(action);
            $.ajax({
                url: '@Url.Action("SubmitActionForMultipleTask", "Workbasket")',
                data: { wbTaskWithActions: wbTaskWithAction, __RequestVerificationToken: $(tokenId).val() },
                @*url:  '@Constants.ApiPath' + 'api/' + 'WorkbasketApi/SubmitActionForMultipleTask',
                data:JSON.stringify({ loginId:'@SessionWrapper.LoginId',userId:@SessionWrapper.UserId.ToString() , wbTaskWithActions:  wbTaskWithAction }),*@
                type: "POST",
                dataType: 'json',
                success: function (data) {
                    $('#LoadRecords').click();
                }
            });
        });
        //----End multiple submit-----------


        //Invoke the required jTable depending on parametere. H
        function BindEntityList() {
            var tokenId = '@Html.AntiForgeryToken()';
            $('#lblEntity').html("Task Name");
            var taskName = $('#lblEntity').val();
            var approve = '@Enums.WorkbasketAction.Approve.ToString()';
            var WIP = '@Enums.WorkbasketAction.WIP.ToString()';
            var reject = '@Enums.WorkbasketAction.Reject.ToString()';
            var pending = '@Enums.WorkbasketAction.Pending.ToString()';
            var pendingReject = '@Enums.WorkbasketAction.PendingReject.ToString()';
            var close = '@Enums.WorkbasketAction.Close.ToString()';
            var completed = '@Enums.WorkbasketAction.Completed.ToString()';
            var hold = '@Enums.WorkbasketAction.Hold.ToString()';
            //Load and Bind User List to jTable
            $('#divEntity').jtable({
                title: 'Task',
                paging: true,  //Enables paging
                pageSize: 10, //Actually this is not needed since default value is 10.
                sorting: true, //Enables sorting
                defaultSorting: 'TaskName ASC', //Optional. Default sorting on first load.
                //editinline:{enable:true},
                selecting: true, //Enable selecting
                multiselect: true, //Allow multiple selecting
                selectingCheckboxes: true, //Show checkboxes on first column
                selectOnRowClick: false, //Enable this to only select using checkboxes
                actions: {
                    //listAction: '@Url.Action("GetWorkbasketItems", "Workbasket")'
                    listAction: function (postData, jtParams) {
                        return $.Deferred(function ($dfd) {
                            $.ajax({
                                url: 'Workbasket/GetWorkbasketItems?taskName=' + $('#inputEntity').val() + '&jtStartIndex=' + jtParams.jtStartIndex + '&jtPageSize=' + jtParams.jtPageSize + '&jtSorting=' + jtParams.jtSorting,
                                type: 'POST',
                                dataType: 'json',
                                data: { __RequestVerificationToken: $(tokenId).val() },
                                success: function (data) {
                                    $dfd.resolve(data);
                                },
                                error: function () {
                                    $dfd.reject();
                                }
                            });
                        });
                    }
                },

                fields: {
                    Id: {
                        key: true,
                        create: false,
                        edit: false,
                        list: false
                    },

                    TeamName: {
                        title: 'Team'
                    },
                    TaskName: {
                        title: 'Task'
                    },
                    Status: {
                        title: 'Status',
                        edit: false,
                    },
                    TaskAtLevel: {
                        title: 'Current Level',
                        sorting: false,
                        display: function (data) {

                            if (null != data.record.RAGStatus && data.record.RAGStatus.replace(/ /g, '') == '@Enums.RAGStatus.G.ToString()') {
                                return "<div class='greenCell text-center'>" + data.record.TaskAtLevel + "</div>";
                            }
                            if (null != data.record.RAGStatus && data.record.RAGStatus.replace(/ /g, '') == '@Enums.RAGStatus.R.ToString()') {
                                return "<div class='redCell text-center'>" + data.record.TaskAtLevel + "</div>";
                            }
                            if (null != data.record.RAGStatus && data.record.RAGStatus.replace(/ /g, '') == '@Enums.RAGStatus.A.ToString()') {
                                return "<div class='amberCell text-center'>" + data.record.TaskAtLevel + "</div>";
                            }
                            else {
                                return "<div class='text-center'>" + data.record.TaskAtLevel + "</div>";
                            }
                        }
                    },
                    FormattedEndDateInt: {
                        title: 'Due By'
                    },
                    LoginedUserAssignedAtLevel: {
                        type: 'hidden'
                    },
                    NextApprover: {
                        title: 'Next Approver',
                        sorting: false
                    },
                    ActionsCanBeTakenAgainstWBTaskId: {
                        title: 'Action',
                        sorting: false,
                        display: function (data) {
                            if (data.record.ActionsCanBeTakenAgainstWBTaskId != null && data.record.ActionsCanBeTakenAgainstWBTaskId.length > 0) {
                                var div = $('<div class="col-md-12"></div>');
                                var sel = $('<select id=actiondd onchange="SetReasonsForActionDD(' + data.record.Id + ',this.value);" />');
                                sel.append($("<option >").attr('value', '0').text('--Select Action--'));
                                for (var i = 0; i <= data.record.ActionsCanBeTakenAgainstWBTaskId.length - 1; i++) {
                                    var itm = data.record.ActionsCanBeTakenAgainstWBTaskId[i].Text;
                                    if (((data.record.Status == pending || data.record.Status.replace(/ /g, '') == pendingReject) && (data.record.TaskAtLevel == '0' && itm != WIP)) || (data.record.Status == itm))
                                    { }
                                    else if ((data.record.Status == approve && itm == close && data.record.TaskAtLevel == '0') || (data.record.TaskAtLevel == 0 && itm == close && data.record.LastLevelForApproval == 0))// last condition checks if WF no. of levels 0
                                    {
                                        sel.append($("<option >").attr('value', itm).text(itm));
                                    }
                                    else if (data.record.Status != approve && itm != close) {
                                        sel.append($("<option >").attr('value', itm).text(itm));
                                    }
                                }
                                div.append(sel);
                                div.append('</br>');
                                div.append('<input type="hidden" id="reasonId" />');
                                div.append('<input type="hidden" id="comments" />');
                                return div;
                            }
                        }
                    }

                },
                //Register to selectionChanged event to hanlde events
                selectionChanged: function () {
                    //Get all selected rows
                    var $selectedRows = $('#divEntity').jtable('selectedRows');
                    if ($selectedRows.length > 0) {
                        $selectedRows.each(function () {
                            var record = $(this).data('record');
                            var row = $('#divEntity').jtable('getRowByKey', record.Id);
                            if (row.find('input:checkbox')[0].disabled) {
                                row.find('input:checkbox')[0].checked = false;
                            }
                        });
                    }
                },
                recordsLoaded: function (event, data) {
                    //--manage show/hiding columns
                    ManageColoumnsForDashboard();
                    //--end manage show/hiding columns

                    RecordsLoadedEvent(event, data);
                }

            });

            var isDashboard = false;
            if ($('#IsDashboard').length > 0) {
                isDashboard = true;
            }
            $('#divEntity').jtable('load', { TaskName: $('#inputEntity').val(), IsDashboard: isDashboard });

        }

    });

    // end of document.ready

    //--manage show/hiding columns for dashboard
    function ManageColoumnsForDashboard() {
        if ($('#IsDashboard').length > 0) {
            $('#divEntity').jtable('changeColumnVisibility', 'ActionsCanBeTakenAgainstWBTaskId', 'visible');
            $('#divEntity').jtable('changeColumnVisibility', 'NextApprover', 'visible');
            $('#divEntity').jtable('changeColumnVisibility', 'TaskAtLevel', 'visible');
            $('#divEntity').jtable('changeColumnVisibility', 'TeamName', 'visible');
            $('.jtable-selecting-column').show();
            $('div.jtable-main-container .jtable thead th.jtable-column-header-selecting').show();
            $('#divEntity').jtable('changeColumnVisibility', 'ActionsCanBeTakenAgainstWBTaskId', 'hidden');
            $('#divEntity').jtable('changeColumnVisibility', 'NextApprover', 'hidden');
            $('#divEntity').jtable('changeColumnVisibility', 'TaskAtLevel', 'hidden');
            $('#divEntity').jtable('changeColumnVisibility', 'TeamName', 'hidden');
            $('div.jtable-column-selection-container').remove();
            $('.jtable-selecting-column').hide();
            $('div.jtable-main-container .jtable thead th.jtable-column-header-selecting').hide();
        }
        else {
            $('#divEntity').jtable('changeColumnVisibility', 'ActionsCanBeTakenAgainstWBTaskId', 'visible');
            $('#divEntity').jtable('changeColumnVisibility', 'NextApprover', 'visible');
            $('#divEntity').jtable('changeColumnVisibility', 'TaskAtLevel', 'visible');
            $('#divEntity').jtable('changeColumnVisibility', 'TeamName', 'visible');
            $('.jtable-selecting-column').show();
            $('div.jtable-main-container .jtable thead th.jtable-column-header-selecting').show();
        }
    }
    //--end manage show/hiding columns

</script>
