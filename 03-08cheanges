//in controller 

 public JsonResult ListWorkDays(int TaskId = 0, int leval = 0)
        {

            string Frequency = Session["Frequency"].ToString();
            if (Frequency == "Daily")
            {
            // genric where condition    .Where(x => CheckValue(x.Value, TaskId, leval, "IntEndDay", cls.GetTaskTemplate(TaskId, leval)) == true).ToList();
                var result = WorkDays.Daily().Where(x => CheckValue(x.Value, TaskId, leval, "IntEndDay", cls.GetTaskTemplate(TaskId, leval)) == true).ToList();
                var option = result.Select(c => new { DisplayText = c.Text, Value = c.Value });
                return Json(new { Result = "OK", Options = option });
            }
            else
            {
                var result = WorkDays.WorkDaysList().Where(x => CheckValue(x.Value, TaskId, leval, "IntEndDay", cls.GetTaskTemplate(TaskId, leval)) == true).ToList();
                var option = result.Select(c => new { DisplayText = c.Text, Value = c.Value });
                return Json(new { Result = "OK", Options = option });
            }
        }
        // genric method
        public bool CheckValue(string Value, int taskId, int leval, string propertyName, TaskTemplateuser tskTemplate)
        {
            if (leval == 0)
            {
                return true;
            }
            else
            {
                if (tskTemplate == null)
                    return true;
                else
                {
                    Type t = tskTemplate.GetType();
                    PropertyInfo prop = t.GetProperty(propertyName);
                    object propertyValue = prop.GetValue(tskTemplate);
                    return propertyValue == null ? true :int.Parse(Value) >= int.Parse( propertyValue.ToString());
                }
            }
        }
           
        
        
        
        
        
        //in class for get data
        
         public TaskTemplateuser GetTaskTemplate(int taskId, int level)
    {

        var TaskTemplateuser = context.TaskTemplateusers.Where(a => a.TaskId == taskId && a.Level == (level - 1));

        if (TaskTemplateuser.Count() > 0)
        {
            return TaskTemplateuser.First();
        }
        return null;
    }
