
<html>
<head>


    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">

    
    <title>eCLOSE</title>
    <!-- Styles -->
    <link href="/assets/fonts/opensans/open-sans.css" rel="stylesheet" type="text/css" />
    <link href="/assets/plugins/pace-master/themes/blue/pace-theme-flash.css" rel="stylesheet" />
    <link href="/assets/plugins/uniform/css/uniform.default.min.css" rel="stylesheet" />
    <link href="/assets/plugins/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="/assets/plugins/fontawesome/css/font-awesome.css" rel="stylesheet" type="text/css" />
    <link href="/assets/plugins/line-icons/simple-line-icons.css" rel="stylesheet" type="text/css" />
    <link href="/assets/plugins/offcanvasmenueffects/css/menu_cornerbox.css" rel="stylesheet" type="text/css" />
    <link href="/assets/plugins/waves/waves.min.css" rel="stylesheet" type="text/css" />
    <link href="/assets/plugins/switchery/switchery.min.css" rel="stylesheet" type="text/css" />
    <link href="/assets/plugins/3d-bold-navigation/css/style.css" rel="stylesheet" type="text/css" />
    <link href="/assets/plugins/slidepushmenus/css/component.css" rel="stylesheet" type="text/css" />
    <link href="/assets/plugins/metrojs/MetroJs.min.css" rel="stylesheet" type="text/css" />
    <link href="/assets/plugins/toastr/toastr.min.css" rel="stylesheet" type="text/css" />
    <link href="/assets/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" type="text/css" />
    <link href="/assets/plugins/sweetalert/lib/sweetalert.css" rel="stylesheet" type="text/css" />
    <link href="/assets/plugins/select2/css/select2.min.css" rel="stylesheet" type="text/css" />
    <link href="/assets/plugins/select2/css/select2-bootstrap.css" rel="stylesheet" type="text/css" />




    <!-- Theme Styles -->
    <link href="/assets/css/modern.css" rel="stylesheet" type="text/css" />
    <link href="/assets/css/themes/white.css" class="theme-color" rel="stylesheet" type="text/css" />
    <link href="/assets/css/custom.css" rel="stylesheet" type="text/css" />

    <!--Datattable-->
    <link href="/Content/jquery.dataTables.min.css" rel="stylesheet" type="text/css" />

    <!-- Javascripts -->
    <script src='/assets/plugins/jquery/jquery-2.1.4.min.js'></script>
    <script src='/assets/plugins/3d-bold-navigation/js/modernizr.js'></script>
    <script src='/assets/plugins/offcanvasmenueffects/js/snap.svg-min.js'></script>

    <style>
        textarea {
            resize: none;
        }
    </style>
</head>
<body class="page-header-fixed page-sidebar-fixed  " onload="StartTimers();" onmousedown="ResetTimers();">


    <main class="page-content content-wrap">

        <div class="navbar">

                <div class="navbar-inner">
                    <div class="sidebar-pusher">
                        <a href="javascript:void(0);" class="waves-effect waves-button waves-classic push-sidebar">
                            <i class="fa fa-bars"></i>
                        </a>
                    </div>
                    <div class="logo-box">
                        <a href="#" class="logo-text">  <img src="/assets/images/eclose-logo.png" width="100" alt="eClose" /></a>
                    </div>
                    <!-- Logo Box -->
                    <div class="search-button">
                        <a href="javascript:void(0);" class="waves-effect waves-button waves-classic show-search"><i class="fa fa-search"></i></a>
                    </div>
                    <div class="topmenu-outer">
                        <div class="top-menu">
                            <ul class="nav navbar-nav navbar-left">

                                <li>
                                    <a href="javascript:void(0);" class="waves-effect waves-button waves-classic sidebar-toggle  "><i class="fa fa-bars"></i></a>

                                </li>
                                <li>

                                    <h3> Delaware North-Demo [Demo]</h3>

                                </li>


                                



                                

                            </ul>
                            <ul class="nav navbar-nav navbar-right">
                                

                                
                                
                                <li class="user-name-top" id="useDetails" role="button">
                                    <img class="img-circle avatar no-s pull-left" src="/assets/images/user-profile.jpg" width="40" height="40" alt="">
                                    <p class="pull-right p-h-sm">
WIND\u289157                                        - Noah Powell

                                        <small class="text-primary">TenantAdmin</small>
                                    </p>
                                </li>

                                <li>
                                    <a href="javascript:void(0);" class="waves-effect waves-button waves-classic toggle-fullscreen"><i class="fa fa-expand"></i></a>
                                </li>
                                <li>
                                    <a class="fa fa-sign-out" href="/Login/LogOut" title="Log-Out"> </a>

                                </li>

                            </ul>
                            <!-- Nav -->
                        </div>
                        <!-- Top Menu -->


                    </div>
                </div>
        </div>
        <!-- Navbar -->
        <!-- Modal -->
        <div class="modal fade" id="myModal" role="dialog">
            <div class="modal-dialog" id="modalDialog" style="left:0%">
                <!-- Modal content-->
                <div class="modal-content" id="modalContent">
                    <div class="modal-header" id="modalHead" style="padding:2px">
                        <button type="button" id="close" class="close" data-dismiss="modal" style="padding:inherit">&times;</button>
                    </div>
                    <div class="modal-body" id="modal-body" style="padding:10px">
                    </div>
                    <div class="modal-footer" id="modalFooter">
                        
                        <button type="button" class="btn btn-default" data-dismiss="modal" id="btnClose" style="border-radius: 0!important;background-color:#34425A;color:white">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="page-sidebar sidebar">
            <div class="page-sidebar-inner slimscroll" id="divMenu">

                



<!-- sidebar menu: : style can be found in sidebar.less -->
<ul class="menu accordion-menu">
 
    <li>
        <a href="/DashboardData" class="waves-effect waves-button">
            <span class="menu-icon glyphicon glyphicon-dashboard"></span>
            <p>Dashboard</p>
        </a>

    </li>
    

    

    <li class="droplink">
        <a href="#" class="waves-effect waves-button"><span class="menu-icon glyphicon glyphicon-tasks"></span><p>Period</p><span class="menu-arrow"></span></a>
        <ul class="sub-menu ">
            <li><a href="/Period">Workdays</a></li>
            <li><a href="/Rollover">Rollover</a></li>
            <li><a href="/Periods">Closure</a></li>
        
        </ul>
    </li>


     

    

    <li class="droplink">
        <a href="#" class="waves-effect waves-button"><span class="menu-icon glyphicon glyphicon-tasks"></span><p>Tasks</p><span class="menu-arrow"></span></a>
        <ul class="sub-menu ">
            <li><a href="/Tasks">Adhoc</a></li>
            <li><a href="/TaskTemplate">Regular</a></li>
            <li><a href="/Discard">Discard</a></li>
            <li><a href="/Reallocation">Reallocation</a></li>
        </ul>
    </li>

    <li class="droplink  ">
        <a href="#" class="waves-effect waves-button">
            <span class="menu-icon glyphicon glyphicon-stats"></span>
            <p>Reports</p><span class="menu-arrow"></span>
        </a>
        <ul class="sub-menu ">
            <li><a href="/Summary">Summary </a></li>
            <li><a href="/Report?report=DueDay">Due Day</a></li>
            <li><a href="/Report?report=Hold">Hold</a></li>
            <li><a href="/Report?report=Reject">Reject</a></li>
            <li>
                <a href="/Report?report=Status">Status</a>
            </li>
            <li><a href="/Report?report=Exception">Exception</a></li>
            <li><a href="/DependencyGraph">Dependency Graph</a></li>
           
        </ul>
    </li>
   
 
    <li class="droplink  ">
        <a href="#" class="waves-effect waves-button">
            <span class="menu-icon glyphicon glyphicon-cog"></span>
            <p>Masters</p><span class="menu-arrow"></span>
        </a>
        <ul class="sub-menu ">
            <li> <a href="/UserRole">User</a></li>
            <li><a href="/Team">Team/Ledger</a></li>
            
            <li><a href="/Location">Location/BU</a></li>
            <li><a href="/ReasonsLookUp">Reason Codes</a></li>
        </ul>
    </li>

    


     
</ul>




            </div>
            <!-- Page Sidebar Inner -->
        </div>
        <!-- Page Sidebar -->
        <div class="page-inner">

            <div class="page-title">
                <div class="pull-left">
                    
                    <div class="page-breadcrumb  ">
                        <ol class="breadcrumb">
                            <li class="active">
                                Home
                            </li>
                            <li class="active"><span id="moduleName">Dashboard</span></li>
                        </ol>
                    </div>
                </div>
                <div class="clearfix"></div>
            </div>

            <div id="main-wrapper">
                <div class="content-wrapper" id="MainDiv">
                    <!-- Main content -->
                    <section class="content" id="main">

                            <div id="divDashboard"></div>
                            <div id="divFilter" class="m-b-xs">
                                <div class="panel no-s">

                                    <div class="panel-body no-s">
                                        <div id="divRenderFilter"></div>
                                        <label id="lblEntity"></label>

                                        <input type="text" name="name" class="form-control" id="inputEntity" />

                                    </div>
                                    <div class="panel-footer ">

                                        <div class="input-group ">
                                            <div class="input-group-btn">
                                                <button type="submit" id="LoadRecords" class="btn btn-primary">
                                                    Load records
                                                </button>
                                            </div>
                                        </div>


                                    </div>
                                </div>
                            </div>

                        <div id="divEntity">
                        </div>
                        

<style>
    path {
        fill: none;
        stroke: black;
    }

    body {
        background: #fff;
    }
</style>

<style>
    table {
        font-family: arial, sans-serif;
        font-size: small;
        border-collapse: collapse;
        width: 100%;
    }

    td, th {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 8px;
    }

    tr:nth-child(even) {
        background-color: #dddddd;
    }

    .table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > td, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr > th, .table td {
        padding: 3px !important;
    }
    
         .loader {
    position: fixed;
    left: 0px;
    top: 0px;
    width: 100%;
    height: 100%;
    z-index: 9999;
    background: url('images/pageLoader.gif') 50% 50% no-repeat rgb(249,249,249);
    opacity: .8;
    }
</style>



    <div class="panel panel-white  " id="divDiscard">
        <div class="panel-body row">
            <br />
            <br />
            <div class="col-md-3">
                <div class="form-group no-m">
                    <label>
                        Location/BU :
                    </label>
                    <select class="form-control" id="Location" name="Location" placeholder="Select Location"><option value="0">--Select--</option>
<option value="203">Australia/ New Zealand [AUS Central Standard Time]</option>
<option value="204">North America [Eastern Standard Time]</option>
<option value="211">testTeam [India Standard Time]</option>
<option value="205">United Kingdom [Greenwich Standard Time]</option>
</select>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group  no-m">
                    <label>
                        Period :
                    </label>
                    <select class="form-control" id="Period" name="Period" placeholder="Select Period"></select>
                </div>
            </div>
        </div>
        <div class="panel-footer">
            <div class="col-md-6">
                <label class="radio-inline"><input type="radio" value="2" id="TaskType" name="TaskType" checked="checked">All Task</label>
                <label class="radio-inline"><input type="radio" value="0" id="TaskType" name="TaskType">Dependent Task</label>
                <label class="radio-inline"><input type="radio" value="1" id="TaskType" name="TaskType">Independent Task</label>
            </div>
            <button type="button" id="btnReport" class="btn btn-primary" onclick="updateDate()">Generate Graph</button>
            
            <button type="button"  class="btn btn-primary" id="save_as_svg" onclick="submit_download_form()" value="">
                Save as SVG
            </button>
            
   
            <form id="svgform" method="post" action="Report/ExportChart">
                <httpRuntime requestValidationMode="2.0" />
                <input name="__RequestVerificationToken" type="hidden" value="sQXFkP0FzRtbOYUbJb9oxktP8xMrxrravLKYoaiGLHzRga9Jq0syRVeK3W7BesEPPhAgza1kq4RPgf7DcP6YCr11qzWk4xP0iaQjssuos8iNlWbqmf0_WJOud7gzi1V50" />
                <input type="hidden" id="output_format" name="output_format" value="">
                <input type="hidden" id="data" name="data" value="">
            </form>
        
        </div>
        <div class="panel">

        </div>
        <div role="tabpanel" class="col-md-12">
            <!-- Nav tabs -->
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active">
                    <a href="#graph" aria-controls="graph" role="tab" data-toggle="tab">Graph</a>
                </li>
                <li role="presentation">
                    <a href="#taskDetails" aria-controls="taskDetails" role="tab" data-toggle="tab">Task Details </a>
                </li>
            </ul>
            <!-- Tab panes -->
            <div class="tab-content">
                <div role="tabpanel" class="tab-pane active" id="graph">
                    <div class="panel-body no-s">
                        <div class="panel-body row" id="divTable" style="width:auto">

                            <div id="wrapper" class="col-lg-12" align="center">
                            </div>

                        </div>
                    </div>
                </div>
                <div role="tabpanel" class="tab-pane" id="taskDetails">

                    
                    <div class="panel-body no-s">
                        <div class="panel-body row" id="divTable" style="width:auto">
                            <table id="tblTaskRecord" class="table table-striped table-bordered dt-responsive nowrap hidden" style="width:100%">
                                <thead style="background-color:#6dd2cd;">
                                    <tr>
                                        <th>TaskId</th>
                                        <th>TaskName</th>
                                        <th>Due By</th>
                                        <th>Dependent TaskId</th>
                                        <th>Dependent Task Due By</th>
                                        <th>Dependent TaskName</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div class="loader"></div>
    </div>
    <div class="row">
        <div id="myModal2" style="overflow: scroll; resize:both;" class="modal fade " aria-hidden="true">
            <div class="modal-dialog modal-lg fixed-height">
                <div class="modal-content" style="height:550px;width:1000px; overflow: scroll; resize:both;">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    </div>
                    <div class="modal-body">
                        <div id='myModalContent2'>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal" aria-label="Close">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
<script src="/Scripts/jspdf.min.js"></script>
<script src="/Scripts/canvas-toBlob.js"></script>

<script src="/Scripts/FileSaver.min.js"></script>
<script src="/Scripts/d3.v3.min.js"></script>
<script src="/Scripts/jquery-1.12.4.js"></script>

<script src="/assets/plugins/bootstrap/js/bootstrap.min.js"></script>


<script src="/Scripts/prettify.js"></script>
<script src="/Scripts/vkbeautify.0.99.00.beta.js"></script>

<script>
  
    (function () {
        var
            form = $('#divDiscard');
        cache_width = form.width(),
                a2 = [850, 1200]; // for a4 size paper width and height

        $('#create_pdf').on('click', function () {
            $('body').scrollTop(0);
            createPDF();
        });
        //create pdf
        function createPDF() {
            getCanvas().then(function (canvas) {
                var
                    img = canvas.toDataURL("image/png"),
                        pdf = new jsPDF('p', 'pt', 'A4');
                var options = {
                    pagesplit: true
                };
                var newImageData = contrastImage(img, 198);

                function contrastImage(img, contrast) {

                    var data = img;
                    var factor = (259 * (contrast + 255)) / (255 * (259 - contrast));

                    for (var i = 0; i < data.length; i += 4) {
                        data[i] = factor * (data[i] - 128) + 128;
                        data[i + 1] = factor * (data[i + 1] - 128) + 128;
                        data[i + 2] = factor * (data[i + 2] - 128) + 128;
                    }
                    return img;
                }

                var width = pdf.internal.pageSize.width;
                var height = pdf.internal.pageSize.height;
                pdf.addImage(canvas, 'JPEG', 5, 0, width, height, newImageData);
                pdf.save('test11.pdf');

                form.width(cache_width);
            });
        }

        // create canvas object
        function getCanvas() {
            form.width((a2[0] * 1.33333) - 80).css('max-width', 'none');
            return html2canvas(form, {
                margin: 1,
                filename: 'myfile.pdf',
                image: { type: 'jpeg', quality: 1 },
                html2canvas: { scale: 2, logging: true },
                jsPDF: { unit: 'in', format: 'a4', orientation: 'l' }
            });
        }

    }());
</script>

<script type="text/javascript">
    $('#divFilter').hide();
    $("#moduleName").text('Reports / Dependency Graph');
    $('#Location').change(function () {
        var locationId = $(this).val();
        $.ajax({
            url: '/Location/GetPeriodNTeamByLocationId',
            data: { locationId: locationId },
            type: "Get",
            contentType: "application/json",
            success: function (data) {
                $("#Period").empty();
                $.each(data.Records.Period, function (index, value) {
                    $("#Period").append("<option value='" + value.Value + "'>" + value.Text + "</option>");
                });
            }
        });
    });
</script>



<script type="text/javascript">
    var svg = "";

    function updateDate() {


        var colorData = [];
        //here add a filter

        if ($('#Location').val() != "0" && $('#Period').val() != "0") {
            var Period = $('#Period').val();
            var locationId = $('#Location').val();

            var chart = d3.select("#wrapper");
            chart.selectAll("svg").remove();
            showPleaseWait();
            d3.json('Report/Graphdata?LocationId=' + locationId + '&PeriodId=' + Period + '&TaskType=' + $("input[name='TaskType']:checked").val(), function (data) {
                console.log(data);
                hidePleaseWait();

                if (data != null || data.empty == true) {
                    console.log(data);
                    var Data = JSON.parse(data);

                    console.log(Data);
                    if (Data.length == 0) {
                        Command: toastr["error"]("Record Not Present related Location and Period ");

                        var tbl = $('#tblTaskRecord');
                        tbl.empty;
                        tbl.addClass("hidden");
                        return false;
                    }
                    else {
                        //lagend TeamNames
                        var TeamNames = [];
                        var TaskEndDates = [];
                        var EndDates = [];
                        var StartDates = [];
                        var rows = ""
                        var editData = [];
                        $.each(Data, function (index, value) {
                            if ((value.TaskTitle == value.DependantTaskName && value.TaskId == value.DependsOnWorkbasketTaskId) || TaskType == true) {
                                value.DependantTaskName = "";
                                value.DependsOnWorkbasketTaskId = "";
                                value.DependantTaskDate = "";
                            }

                            if (value.DependsOnWorkbasketTaskId != "") {
                                if (value.DependsOnWorkbasketTaskId == null) {
                                    value.DependantTaskName = "";
                                    value.DependsOnWorkbasketTaskId = "";
                                    value.DependantTaskDate = "";
                                }
                                if ($("input[name='TaskType']:checked").val() == "0") {
                                    if (value.DependsOnWorkbasketTaskId != "") {
                                        editData.push(Data[index]);
                                    }
                                }
                                else {
                                    editData.push(Data[index]);
                                }

                                if ($.inArray(value.TeamName, TeamNames) == -1) {
                                    TeamNames.push(value.TeamName);
                                }

                                if ($.inArray(value.TaskDate, TaskEndDates) == -1) {
                                    TaskEndDates.push(value.TaskDate);
                                }
                                if ($.inArray(value.EndDate, EndDates) == -1) {
                                    EndDates.push(value.EndDate);
                                }

                                if ($.inArray(value.StartDate, StartDates) == -1) {
                                    StartDates.push(value.StartDate);
                                }
                            }
                        });

                        console.log('editdata' + editData);
                        var table = $('#tblTaskRecord');
                        table.empty;
                        $(function () {
                            table.removeClass("hidden");
                            var GridTable = table.dataTable({
                                destroy: true,
                                searching: true,
                                paging: false,
                                filter: true, // this is for disable filter (search box)
                                orderMulti: true, // for disable multiple column at once
                                pageLength: 1000,
                                bJQueryUI: true,
                                aaData: editData,
                                aoColumns: [
                                        { mData: 'TaskId', autoWidth: true },
                                        { mData: 'TaskTitle', autoWidth: true },
                                        { mData: 'TaskDate', autoWidth: true },
                                        { mData: 'DependsOnWorkbasketTaskId', autoWidth: true },
                                        { mData: 'DependantTaskDate', autoWidth: true },
                                        { mData: 'DependantTaskName', autoWidth: true }
                                ]
                            });
                        });

                        var margin = {
                            top: 20,
                            right: 20,
                            bottom: 30,
                            left: 9
                        };
                        width = 1100 - margin.left - margin.right,
                           height = 950 - margin.top - margin.bottom;
                        // var sorted = TaskEndDates.sort();
                        var sortedmin = StartDates.sort();
                        var sortedmax = EndDates.sort();
                        var minDate = sortedmin[0];
                        var maxDate = sortedmax[0];
                        var format = d3.time.format("%Y-%m-%d");
                        //minDate = minDate.split('T')[0];
                        //maxDate = maxDate.split('T')[0];

                        console.log(minDate);
                        console.log(maxDate);

                        // x axis scal min and maximum Data ...if you to do this dynamaic send the Data for json assign here

                        var dateMin = new Date();
                        var dateMax = new Date();
                        dateMax = format.parse(maxDate);
                        dateMin = format.parse(minDate);
                       
                       


                        dateMin.setDate(dateMin.getDate() - 1);
                        var newMinDate = dateMin.toDateString();
                        newMinDate = new Date(Date.parse(newMinDate));


                        dateMax.setDate(dateMax.getDate() + 1);
                        var newMaxDate = dateMax.toDateString();
                        newMaxDate = new Date(Date.parse(newMaxDate));


                        ///
                        var xValue = function (d) {
                            return format.parse(d.TaskDate);
                        }, // Data -> value

                            xScale = d3.time.scale().domain([dateMin, dateMax]).range([0, width], 3.5), // value -> display
                            xMap = function (d) {

                                return xScale(xValue(d));
                            }, // Data -> display
                            xAxis = d3.svg.axis().scale(xScale).orient("bottom");
                        var yValue = function (d) {
                            return d.TaskNumber;
                        }, // Data -> value
                            yScale = d3.scale.linear().range([height, 0]), // value -> display
                            yMap = function (d) {
                                return yScale(yValue(d));
                            }, // Data -> display
                            yAxis = d3.svg.axis().scale(yScale).orient("left");
                        // setup fill color
                        var cValue = function (d) {
                            return d.ownership;
                        },
                            color = d3.scale.category10();

                        // add the graph canvas to the body of the webpage
                        //var svg = d3.select("#wrapper").append("svg")
                        //    .attr("width", width + margin.left + margin.right)
                        //    .attr("height", height + margin.top + margin.bottom)
                        //     .call(d3.behavior.zoom().on("zoom", function () {
                        //         svg.attr("transform", "translate(" + d3.event.translate + ")" + " scale(" + d3.event.scale + ")")
                        //     }))
                        //    .append("g")
                        //    .attr("id", "visualization")
                        //    .attr("xmlns", "http://www.w3.org/2000/svg")
                        //    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

                        var svg = d3.select("#wrapper").append("svg")
                                    .attr("width", width + margin.left + margin.right)
                                    .attr("height", height + margin.top + margin.bottom)
                                    //.call(responsivefy) 
                                     .call(d3.behavior.zoom().on("zoom", function () {
                                         svg.attr("transform", "translate(" + d3.event.translate + ")" + " scale(" + d3.event.scale + ")")
                                     }))
                                    .append("g")
                                    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

                        svg.append("rect")
                           .attr("width", "100%")
                           .attr("height", "100%")
                           .attr("fill", "#F7F7F7");

                        // add the tooltip area to the webpage
                        var tooltip = d3.select("#wrapper").append("div")
                            .attr("class", "tooltip")
                            .style("opacity", 0);

                        // don't want dots overlapping axis, so add in buffer to Data domain

                        xScale.domain([dateMin, dateMax]);
                        yScale.domain([d3.min(Data, yValue) - 1, d3.max(Data, yValue) + 50]);

                        //x-axis name
                        svg.append("g")
                            .attr("class", "x axis")
                            .attr("transform", "translate(0," + height + ")")
                            .call(xAxis)
                            .append("text")
                            .attr("class", "label")
                            .style("font-size", "10px")
                            .attr("x", width)
                            .attr("y", -6)
                            .style("text-anchor", "end")
                            .text("Task End Date");

                        // y-axis name
                        svg.append("g")
                            .attr("class", "y axis")
                            .call(yAxis)
                            .append("text")
                            .attr("class", "label")
                            .attr("transform", "rotate(-90)")
                            .attr("y", 6)
                            .attr("dy", ".71em")
                            .style("text-anchor", "end");
                        //.text();
                        //var path = svg.append("path")
                        // .attr("d", line(data))
                        // .attr("stroke", "steelblue")
                        // .attr("stroke-width", "1")
                        // .attr("fill", "none");
                        // draw dots

                        svg.selectAll(".dot")
                            .data(Data)
                            .enter().append("circle")
                            .attr("class", "dot")
                            .attr("r",5)
                            .attr("cx", xMap)
                            .attr("cy", yMap)
                            .style("fill", function (d) {
                                return color(d.extra);
                            }).style("cursor", "pointer")
                            .append("title")
                            .text(function (d) {
                                var listOfvalueDependsOnWorkbasketTaskId = "";
                                if (d.DependsOnWorkbasketTaskId != "") {
                                    listOfvalueDependsOnWorkbasketTaskId = d.DependsOnWorkbasketTaskId + ", ";
                                }

                                $.each(Data, function (indexCheack, valueCheack) {
                                    if (d.TaskId == valueCheack.TaskId && d.DependsOnWorkbasketTaskId != valueCheack.DependsOnWorkbasketTaskId) {
                                        listOfvalueDependsOnWorkbasketTaskId = listOfvalueDependsOnWorkbasketTaskId + valueCheack.DependsOnWorkbasketTaskId + ", ";
                                    }
                                })

                                if (d.TaskId == d.DependsOnWorkbasketTaskId && d.TaskTitle == d.DependantTaskName) {
                                    d.DependsOnWorkbasketTaskId = "";
                                    d.DependantTaskName = "";
                                }
                                return ("(" + d.TaskId + ") " + d.TaskTitle + "(" + d.TaskDate + ") DependentTaskID:-" + listOfvalueDependsOnWorkbasketTaskId)
                            })
                           
                             .on("mouseout", function (d) {
                                 tooltip.transition()
                                     .duration(500)
                                     .style("opacity", 0)
                                     .style("cursor", "default");
                             })
                            .attr('data-title', function (e) {
                                return e.TaskTitle;
                            })
                            .attr('data-value', function (e) {
                                return e.TaskNumber;
                            })
                            .attr('data-date', function (e) {
                                return e.TaskDate;
                            })
                            .attr('data-sqft', function (e) {
                                return e.extra;
                            });

                        var location = document.getElementById("Location");
                        var locationValue = $("#Location option:selected").text();

                        var period = document.getElementById("Period");
                        var periodValue = $("#Period option:selected").text();

                        var taskType = document.getElementById("TaskType");
                        var taskTypeValue = $("input[name='TaskType']:checked").val();// $("#TaskType option:selected").text();
                        if (taskTypeValue == 2) {
                            taskType = "All Task";
                        }
                        else if (taskTypeValue == 0) {
                            taskType = "Dependent Task";
                        }
                        else {
                            taskType = "Independent Task";
                        }
                        console.log($("input[name='TaskType']:checked"));

                        var title = 'Location - ' + locationValue + ',  ' + 'Period - ' + periodValue + ',  ' + 'Task type - ' + taskType;
                        svg.append("text")
                            .attr("x", (width / 2))
                            .attr("y", 3 - (margin.top / 2))
                            .attr("text-anchor", "middle")
                            .style("font-size", "12px")
                            //.style("text-decoration", "underline")
                            .style("text-decoration-style", "dotted")
                            .style("text-decoration-color", "red")

                            .text(title);

                        //draw line
                 

                        for (var item in Data) {

                            var nodelabels = svg .append("text") .attr(
                            { 
                                "x": xScale((format.parse(Data[item]["TaskDate"]))),
                                "y": yScale((Data[item]["TaskNumber"])),
                                "class": "nodelubel",
                                //"stroke": "blue",
                                "font-size": "10px"
                            }) .text(function (d) {
                                return Data[item]["TaskId"] 
                            }); 

                            if (Data[item]["DependsOnWorkbasketTaskId"] != "") {
                                svg.append("line")
                                    .attr("x1", xScale(format.parse(Data[item]["TaskDate"])))
                                    .attr("y1", yScale(Data[item]["TaskNumber"]))
                                    .attr("x2", xScale(format.parse(Data[item]["DependantTaskDate"])))
                                    .attr("y2", yScale(Data[item]["DependantTaskNumber"]))
                                    .attr("stroke-width", 1)
                                    .attr("stroke", Data[item]["color"]);
                            }
                        }

                      var legendVals2 = ["Correct Dependancy", "Wrong Dependancy"]
                        var colorCodeValues = ["rgb(44, 160, 44)", "rgb(214, 39, 40)"]
                        function colorCode(code) {
                            return colorCodeValues[code];
                        }
                        var svgLegned4 = d3.select(".legend4").append("svg")
                            .attr("width", width)
                            .attr("height", height - 50)


                        var dataL = 0;
                        var offset = 150;
                   
                        var legend4 = svg.selectAll('.legends4')
                            .data(legendVals2)
                            .enter().append('g')
                            .attr("class", "legends4")
                            .attr("transform", function (d, i) {
                                if (i === 0) {
                                    dataL = d.length + offset
                                    return "translate(0,0)"
                                } else {
                                    var newdataL = dataL
                                    dataL += d.length + offset
                                    return "translate(" + (newdataL) + ",0)"
                                }
                            })

                        legend4.append('rect')
                            .attr("x", 10)
                            .attr("y", 5)
                            .attr("width", 55)
                            .attr("height", 5)
                            .style("fill", function (d, i) {
                                return colorCode(i)
                            })

                        legend4.append('text')
                            .attr("x", 65)
                            .attr("y", 10)
                            //.attr("dy", ".35em")
                            .text(function (d, i) {
                                return d
                            })
                            .attr("class", "textselected")
                            .style("text-anchor", "start")
                            .style("font-size", 10)

                        // draw legend
                        var legend = svg.selectAll(".legend")
                            .data(color.domain())
                            .enter().append("g")
                            .attr("class", "legend")
                            .attr("transform", function (d, i) { return "translate(0," + i * 20 + ")"; });

                        // draw legend colored rectangles
                        legend.append("rect")
                            .attr("x", width - 18)
                            .attr("width", 18)
                            .attr("height", 18)
                            .style("fill", color);

                        // draw legend text
                        legend.append("text")
                            .attr("x", width - 24)
                            .attr("y", 9)
                            .attr("dy", ".35em")
                            .style("text-anchor", "end")
                            .text(function (d) {
                                return (TeamNames[d]);
                            })
                    }
                    $('.y .tick').remove();
                }
                else {

                    Command: toastr["error"](data.Message);
                    return false;
                }
            })

        }
        else {

            Command: toastr["error"]("Please Select Location and Period");
            return false;
        }

    };
    function showPleaseWait() {
        var modalLoading = '<div class="modal" id="pleaseWaitDialog" data-backdrop="static" data-keyboard="false" role="dialog">\
         <div class="modal-dialog">\
         <div class="modal-content">\
         <div class="modal-body">\
         <divs>\
         <h4 class="text-center">Please wait...</h4>\
         </div>\
         </div>\
         </div>\
         </div>\
         </div>';
        $(document.body).append(modalLoading);
        $("#pleaseWaitDialog").modal("show");
    }
    function hidePleaseWait() {
        $("#pleaseWaitDialog").modal("hide");
    }
    function responsivefy(svg) {
        // get container + svg aspect ratio
        var container = d3.select(svg.node().parentNode),
            width = parseInt(svg.style("width")),
            height = parseInt(svg.style("height")),
            aspect = width / height;

        // add viewBox and preserveAspectRatio properties,
        // and call resize so that svg resizes on inital page load
        svg.attr("viewBox", "0 0 " + width + " " + height)
            .attr("perserveAspectRatio", "xMinYMid")
            .call(resize);

        // to register multiple listeners for same event type, 
        // you need to add namespace, i.e., 'click.foo'
        // necessary if you call invoke this function for multiple svgs
        // api docs: https://github.com/mbostock/d3/wiki/Selections#on
        d3.select(window).on("resize." + container.attr("id"), resize);

        // get width of container and resize svg to fit it
        function resize() {
            var targetWidth = parseInt(container.style("width"));
            svg.attr("width", targetWidth);
            svg.attr("height", Math.round(targetWidth / aspect));
        }
    }
</script>

<script>
    $(window).load(function () {
        $(".loader").fadeOut("slow");
    });
    $('body').on('click', '.dot', function () {
        var tokenId = '<input name="__RequestVerificationToken" type="hidden" value="iiSTESisBhJbdaiOA4SHR4h1z4JuA_eYqkqsDKZOj5nLaeDVjFciiZ38u4_YNxHeJo9zAMgQ2U5nl3JvPe-KcvNcaE6_dAPfa9WiTO-iR1k3a-9YXtEsdwq_6nP9Lx9v0" />';
        console.log($(this).text().substring($(this).text().indexOf('(') + 1, $(this).text().indexOf(')')));
        var WorkbasketTaskId = $(this).text().substring($(this).text().indexOf('(') + 1, $(this).text().indexOf(')'))
        var newText = $(this).text().substring($(this).text().indexOf(')') + 2);
        var taskName = newText.substring(0, newText.indexOf('('));
        console.log(taskName);
        // here you can do the logic of show model popup of that page.
        $(".loader").fadeIn("slow");
        var options = { "backdrop": "static", keyboard: true };
        $.ajax({

            url: '/Report/GetPopUpTaskDetails',
            data: { Id: WorkbasketTaskId, taskName: taskName },
            type: "Get",
            contentType: "application/json",
            success: function (data) {
                console.log('main : '+data);
                $('#myModalContent2').html(data);
                $('#myModal2').modal(options);
                $('#myModal2').modal('show');
               
            },
            error: function () {
                alert("Dynamic content load failed.");
            }
        });
        $(".loader").fadeOut("slow");
    } );
    $("#closbtn").click(function () {
        $('#myModal').modal('hide');
    });
</script>
<script>

    function submit_download_form(output_format) {
        // Get the d3js SVG element
        var tmp = document.getElementById("wrapper");
        //var svg = tmp.getElementsByTagName("svg")[0];


        // Extract the data as SVG text string

        var svg_xml = new XMLSerializer().serializeToString(tmp.getElementsByTagName("svg")[0]);

        // Submit the <FORM> to the server.
        // The result will be an attachment file to download.
        var form = document.getElementById("svgform");
        form['output_format'].value = output_format;
        form['data'].value = svg_xml;

       
        form.submit();
        //form.submit();
    }
    $("#save_as_svg").click(function () { submit_download_form("svg"); });
</script>


                    </section>
                </div>
            </div>
            <div class="page-footer">

                <p class="no-s ">
                    <strong>
                        Copyright
                        &copy;
                        <script type="text/javascript">
                            document.write(new Date().getFullYear());
                        </script> <a href="#">WNS Holding Ltd</a>.
                    </strong> All rights reserved.
                </p>


            </div>
        </div>
        <!-- Page Inner -->

    </main>

    <!-- ./wrapper -->
    <!-- Javascripts -->

    <script src='/assets/plugins/jquery-ui/jquery-ui.min.js'></script>

    
    <script src='/assets/plugins/jquery-blockui/jquery.blockui.js'></script>
    <script src='/assets/plugins/bootstrap/js/bootstrap.min.js'></script>
    <script src='/assets/plugins/jquery-slimscroll/jquery.slimscroll.min.js'></script>
    <script src='/assets/plugins/switchery/switchery.min.js'></script>
    <script src='/assets/plugins/uniform/jquery.uniform.min.js'></script>
    
    
    <script src='/assets/plugins/waves/waves.min.js'></script>
    
    <script src='/assets/plugins/waypoints/jquery.waypoints.min.js'></script>
    <script src='/assets/plugins/jquery-counterup/jquery.counterup.min.js'></script>
    <script src='/assets/plugins/toastr/toastr.min.js'></script>
    <script src='/assets/plugins/sweetalert/lib/sweetalert.min.js'></script>


    <script src='/assets/plugins/metrojs/MetroJs.min.js'></script>
    <script src='/assets/js/modern.js'></script>
    

    <script src='/Scripts/jTable/external/json2.js' type="text/javascript"></script>
    <script src='/Scripts/jtable/jquery.jtable.js' type="text/javascript"></script>
    <script src='/Scripts/JQ/ValidationEngine/js/jquery.validationEngine.js' type="text/javascript"></script>
    <script src='/Scripts/JQ/ValidationEngine/js/languages/jquery.validationEngine-en.js' type="text/javascript"></script>

    <!-- added by govind for rollover-->
    <link href='/assets/plugins/bootstrap-multiselect/bootstrap-multiselect.css' rel="stylesheet" type="text/css" />
    <script src='/assets/plugins/bootstrap-multiselect/bootstrap-multiselect.js' type="text/javascript"></script>
    <script src='/assets/plugins/select2/js/select2.min.js'></script>
    <script src='/assets/plugins/select2/js/select2.full.min.js'></script>
    <!-- end govind for rollover-->

    <link href='/Scripts/jTable/themes/metro/eclose-default/jtable.css' rel="stylesheet" type="text/css" />

    <link href='/Scripts/JQ/ValidationEngine/css/validationEngine.jquery.css' rel="stylesheet" type="text/css" />
    <script src='/assets/plugins/bootstrap-datetimepicker/js/moment.min.js' type="text/javascript"></script>
    <script src='/assets/plugins/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js' type="text/javascript"></script>
    <link href='/assets/plugins/bootstrap-datetimepicker/css/bootstrap-datetimepicker.css' rel="stylesheet" type="text/css" />
    <script src='/Scripts/jtable/extensions/jquery.jtable.editinline.js' type="text/javascript"></script>
    <!--Datattable-->
    <script src='/Scripts/jquery.dataTables.min.js' type="text/javascript"></script>
    <script src='/Scripts/eClose_Reports/buttons.html5.min.js' type="text/javascript"></script>
    <script src='/Scripts/eClose_Reports/dataTables.buttons.min.js' type="text/javascript"></script>
    <script src='/Scripts/eClose_Reports/jszip.min.js' type="text/javascript"></script>
    <script src='/Scripts/eClose_Reports/pdfmake.min.js' type="text/javascript"></script>
    <script src='/Scripts/eClose_Reports/vfs_fonts.js' type="text/javascript"></script>
    <script src='/Scripts/jquery.validate.js'></script>>

<!-- Visual Studio Browser Link -->
<script type="application/json" id="__browserLink_initializationData">
    {"appName":"Chrome","requestId":"68c5d981507f4db5b114f34b66a9082b"}
</script>
<script type="text/javascript" src="http://localhost:57997/312f7306e6834affbeaa1c6867c5fcfd/browserLink" async="async"></script>
<!-- End Browser Link -->

</body>
</html>





<script type="text/javascript">
    //Switch Role click event
    $("#useDetails").click(function(){
        $.ajax({
            type: "GET",
            cache: true,
            async: false,
            url: '/User/SwitchRolePopUp',
            datatype: "html",
            success: function (response) {
                $("#myModal").modal();
                $("#modal-body").html(response);
                $("#btnClose").show();
                $("#close").show();
            },
            error: function (response) {
                alert(response.responsetext);
            }
        });
    });

    //User Selected Role from User Role DropDown
    $(document).on('change', '#ddluserRole', function () {
        var token = '<input name="__RequestVerificationToken" type="hidden" value="6oUajE_9uXhR-U_--a-wyB5RlQ0s5p30uR6rj35zPMPoiWlVv_ra17YkSVLk0LC9v7pPgahYwgqvkgjwSA8UTursec0xVAimxEMEdCwsT46ubfmmVRvXN8HsRU7htFmc0" />';
        $.ajax({
            type:"POST",
            url:'/Login/SetRoleInSession',
            data:{ 
                __RequestVerificationToken: $(token).val(),
                selectedRole:$("#ddluserRole").val() },
            datatype:'json',
            success:function(data){
                if (data.Role != "Fail") {
                    if (data.Role == "TenantAdmin") {
                        window.location.href = '/DashboardData';
                    }
                    else if (data.Role == "Controller") {
                        window.location.href = '/FinController';
                    }
                    else {
                        window.location.href = '/Dashboard';
                    }
                }
            },
            error:function(response){
                alert(response.responsetext);
            }
        });
    });

    //--- Session timeout check
    var g_pageTimer ;
    // Start timers.
    function StartTimers() {
        // remember our timers so we can cancel when we unload this page and reset them on the next page load
        g_pageTimer = window.setTimeout(ilSessionTimeout, 1200000);
    }


    // Reset timers.
    function ResetTimers() {
        window.clearTimeout(g_pageTimer);
        StartTimers();
    }

    function ilSessionTimeout() {

        window.location = '/Login/LogOut?errorMessage=Your%20session%20expired.';
    };
    // clean up anything that needs cleaning before we leave this page
    window.onbeforeunload = function(e) {
        // clear the timers
        window.clearTimeout(g_pageTimer);
    };
    //--- End Session timeout check

    //--- ExportToExcel starts here
    function JSONToCSVConvertor(JSONData, ReportTitle, ShowLabel) {
        //If JSONData is not an object then JSON.parse will parse the JSON string in an Object
        var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;

        var CSV = '';

        //This condition will generate the Label/Header
        if (ShowLabel) {
            var row = "";

            //This loop will extract the label from 1st index of on array
            for (var index in arrData[0]) {

                //Now convert each value to string and comma-seprated
                row += index + ',';
            }

            row = row.slice(0, -1);

            //append Label row with line break
            CSV += row + '\r\n';
        }

        //1st loop is to extract each row
        for (var i = 0; i < arrData.length; i++) {
            var row = "";

            //2nd loop will extract each column and convert it in string comma-seprated
            for (var index in arrData[i]) {
                row += '"' + arrData[i][index] + '",';
            }

            row.slice(0, row.length - 1);

            //add a line break after each row
            CSV += row + '\r\n';
        }

        if (CSV == '') {
            alert("Invalid data");
            return;
        }
        var fileName = ReportTitle;
        if (msieversion()) {
            var IEwindow = window.open();
            IEwindow.document.write('sep=,\r\n' + CSV);
            IEwindow.document.close();
            IEwindow.document.execCommand('SaveAs', true, fileName + ".csv");
            IEwindow.close();
        } else {
            //Initialize file format you want csv or xls
            var uri = 'data:text/csv;charset=utf-8,' + escape(CSV);

            //this trick will generate a temp <a /> tag
            var link = document.createElement("a");
            link.href = uri;

            //set the visibility hidden so it will not effect on your web-layout
            link.style = "visibility:hidden";
            link.download = fileName + ".csv";

            //this part will append the anchor tag and remove it after automatic click
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
    }

    function msieversion() {
        var ua = window.navigator.userAgent;
        var msie = ua.indexOf("MSIE ");
        if (msie == 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./)) // If Internet Explorer, return true
        {
            return true;
        } else { // If another browser,
            return false;
        }
        return false;
    }

    //--- End Export to Excel

    function BindOpenPeriod(){

        $.ajax({
            url: '/Period/GetOpenPeriodsForTenant',
            type: "Get",
            cache: false,
            data: { tenantId: '57' },
            success: function(data) {

                $.each(data.Records, function (index, value) {
                    $("#opnPeriods").append('<span class="comma">'+value+'</span>');
                });
            }
        });
    }

    $(document).ready(function(){
        document.addEventListener("keydown", keyDownTextField, false);
        function keyDownTextField(e) {
            if (e.which == 13) {
                var $focused = $(':focus');
                $focused.focus().click();
            }
        }

        //alert(window.location.pathname);
        if($("#opnPeriods").length>0)
        {
            BindOpenPeriod();
        }

        $("div").removeClass('ui-icon-gripsmall-diagonal-se, ui-icon');



        $(".menu").find('a').each(function(){
            if($(this).attr("href")==window.location.pathname)
                // alert($(this).attr("href")==window.location.pathname);
                $(this).parents().addClass('active open') ;
            $(".menu li.active ul.sub-menu").attr('style', 'display:block;');
            //$(this).parent().parent().parent().addClass('active');
        } )


        //$(".sub-menu").find( "li.active" ).each(function(){

        //    if($(this).attr("href")==window.location.pathname)

        //        $(this).parent().addClass('open active');
        //    $(this).parent().attr('style', 'display:block;');
        //} )

    })

    //var activeurl = window.location.pathname.replace(/.*\//, '');
    //$('.menu').find('a[href="' + activeurl + '"]').parents('ul.sub-meu').siblings('a').addClass('active');

    //$(document).ready(function() {
    //    $('select').select2();


    //});


    $(window).load(function() {
        $('select.form-control').select2();
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-center",
            "preventDuplicates": true,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }

    });

</script>
