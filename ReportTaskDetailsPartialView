@using ECloseBL.Entities;
@model ECloseBL.Entities.TaskInfo

<input type="hidden" id="NoOfActionButtons" />
<div class="panel-footer" id="MultiWBTaskSubmit">
    <button class="btn btn-primary  " title="Submit">Submit</button>
</div>
<div id="divWorkbasket">

    <div class="panel  no-s">
        <div class="panel-body bg-light no-p p-v-xs ">
            <h3 class="pull-left no-s">
                <span class="indicator" id="imgRagStatus"><i class="fa fa-dot-circle-o fa-lg"></i></span>
                <label><strong>Task @LableConstants.WorkBasketTaskId : </strong></label>
                <input type="text" value="" id="textGraphTaskId" disabled="disabled" class="form-control-static" />
                <label><strong>Task @LableConstants.WorkBasketTaskName :</strong></label>
                <input type="text" value="" id="textGraphTaskName" disabled="disabled" class="form-control-static" />
                <label><strong>Team :</strong></label>
                <input type="text" value="" id="textGraphTeam" disabled="disabled" class="form-control-static" />
                <label><strong>Status :</strong></label>
                <input type="text" value="" id="textGraphStatus" disabled="disabled" class="form-control-static" />
            </h3>
       
        </div>
    </div>
    <div class="panel panel-white">
        <div class="panel-body">
            <div class="row">
                <div class="col-md-3">
                    <ul class="list-group bg-light">
                       
                        <li class="list-group-item bg-n"><label><strong>Workflow :</strong></label> <input type="text" value="" id="textGraphWorkflow" disabled="disabled" class="form-control-static" /></li>
                        <li class="list-group-item bg-n"><label><strong>Next Approver :</strong></label> <input type="text" value="" id="textGraphNextApprover" disabled="disabled" class="form-control-static" /></li>
                        <li class="list-group-item bg-n"><label><strong>Current Level :</strong></label><input type="text" value="" id="textGraphCurrentLevel" disabled="disabled" class="form-control-static" /></li>
                        <li class="list-group-item bg-n">
                            <label><strong>Period :</strong></label><input type="text" value="" id="textGraphPeriod" disabled="disabled" class="form-control-static" />
                        </li>
                        <li class="list-group-item bg-n"><label><strong>Priority :</strong></label><input type="text" value="" id="textGraphPriority" disabled="disabled" class="form-control-static" /></li>
                        <li class="list-group-item bg-n">
                            <label><strong>Description :</strong></label><textarea id="textGraphDescription" disabled="disabled" cols="40" rows="3" class="form-control form-control-static"></textarea>
                        </li>
                    </ul>
                </div>
                <div role="tabpanel" class="col-md-9">
                    <!-- Nav tabs -->
                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" class="active">
                            <a href="#taskActionable" aria-controls="uploadTab" role="tab" data-toggle="tab">TASK ACTIONABLE</a>

                        </li>
                        <li role="presentation">
                            <a href="#actionHistory" aria-controls="browseTab" role="tab" data-toggle="tab">ACTION HISTORY </a>

                        </li>
                        <li role="presentation">
                            <a href="#dependency" aria-controls="browseTab" role="tab" data-toggle="tab">DEPENDENCY</a>

                        </li>
                    </ul>
                    <!-- Tab panes -->
                    <div class="tab-content">
                        <div role="tabpanel" class="tab-pane active" id="taskActionable">
                            <div id="divWorkflowChart">
                            </div>
                            <div class="clearfix"></div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="actionHistory">
                            <div class="col-lg-12">
                                <table id="divGraphActionHistory" class="table table-striped table-bordered dt-responsive" >
                                    <thead >
                                        <tr>
                                            <th>Id</th>
                                            <th>TaskId</th>
                                            <th>Action</th>
                                            <th>Reason</th>
                                            <th>Comments</th>
                                            <th>FormattedActionedOn</th>
                                            <th>WfLevel</th>
                                            <th>Cycle</th>
                                            <th>UserName</th>
                                        </tr>
                                    </thead>
                                    <tbody ></tbody>
                                </table>
                                </div>
                            </div>
                        <div role="tabpanel" class="tab-pane" id="dependency">
                            <div class="col-lg-12">
                                <table id="divGraphDependsOnTask" class="table table-striped table-bordered dt-responsive" style="width:200px !important" >
                                    <thead >
                                        <tr>
                                            <th>Id</th>
                                            <th>Location</th>
                                            <th>TeamName</th>
                                            <th>TaskName</th>
                                            <th>Status</th>
                                            <th>TaskAtLevel</th>
                                            <th>NextApprover</th>
                                        </tr>
                                    </thead>
                                    <tbody ></tbody>
                                </table>
                            </div>
                                  
                        </div>
                    </div>
                </div>
             
            </div>
            <div class="row">
                <div class="pull-right" id="divBack">
                    <button type="button" class="btn btn-primary" data-dismiss="modal" aria-label="Close">Close</button>
                </div>
            </div>
            </div>
    </div>

</div>

<script type="text/javascript">
  
    jQuery(function ($) {
        var $active = $('#accordion .panel-collapse.in').prev().addClass('active');
       
        $('#accordion').on('show.bs.collapse', function (e) {
            $('#accordion .panel-heading.active').removeClass('active').find('.glyphicon').toggleClass('glyphicon-plus glyphicon-minus');
            $(e.target).prev().addClass('active').find('.glyphicon').toggleClass('glyphicon-plus glyphicon-minus');
        })
    });
    function toggleIcon(e) {
        $(e.target)
            .prev('.panel-heading')
            .find(".more-less")
            .toggleClass('glyphicon-plus glyphicon-minus');

    }
    $('.panel-group').on('hidden.bs.collapse', toggleIcon);
    $('.panel-group').on('shown.bs.collapse', toggleIcon);



    $(document).ready(function () {
        
        var WorkbasketTaskId = '@Model.WorkbasketTaskId';
        var taskName = '@Model.TaskName';
        var tokenId = '@Html.AntiForgeryToken()';
        var jtStartIndex = 0;
        var jtPageSize = 10;
        var jtSorting = 'FormattedEndDateInt ASC';

        $.ajax({
            url: '/Workbasket/GetActionLogByWorkbasketTaskId?workbasketTaskId=' + WorkbasketTaskId + '&jtStartIndex=' + jtStartIndex + '&jtPageSize=' + jtPageSize,
            type: 'POST',
            dataType: 'json',
            data: { __RequestVerificationToken: $(tokenId).val() },
            success: function (data) {
                dependentTableData(data.Records);
            },
            error: function () {
               // $dfd.reject();
            }
        });

        function dependentTableData(records) {
            if (records != null) {
                var Data = records;
                var editData = [];
                $.each(Data, function (index, value) {
                    editData.push(Data[index]);
                });
                console.log(editData);
                var showData = [];
                $.each(editData, function (index, value) {
                    showData.push(editData[index]);
                });
               // $('#spnActionHistory').val(editData.length);
                
                console.log('showData' + showData);
                var table = $('#divGraphActionHistory');
                table.empty;
                $(function () {
                    //table.removeClass("hidden");
                    var GridTable = table.dataTable({
                        destroy: true,
                        searching: true,
                        paging: false,
                        filter: true, // this is for disable filter (search box)
                        orderMulti: true, // for disable multiple column at once
                        pageLength: 1000,
                        bJQueryUI: true,
                        aaData: showData,
                        aoColumns: [
                                { mData: 'Id', autoWidth: false },
                                { mData: 'WorkbasketTaskId', autoWidth: false },
                                { mData: 'Action', autoWidth: false },
                                { mData: 'Reason', autoWidth: false },
                                { mData: 'Comments', autoWidth: false },
                                { mData: 'FormattedActionedOn', autoWidth: false },
                                { mData: 'WorkflowLevelName', autoWidth: false },
                                { mData: 'Cycle', autoWidth: false },
                                { mData: 'UserName', autoWidth: false }

                        ]
                    });
                });
            }
        }


        $.ajax({
           
            url: '/Workbasket/GetDependsOnTaskByWorkbasketTaskId?workbasketTaskId=' + WorkbasketTaskId,
            type: 'POST',
            dataType: 'json',
            data: { __RequestVerificationToken: $(tokenId).val() },
            success: function (data) {
                actionTableData(data.Records);
            },
            error: function () {
               // $dfd.reject();
            }
        });

        function actionTableData(records) {
            var Data = records;
            var editData = [];
            $.each(Data, function (index, value) {
                editData.push(Data[index]);
            });
           
            console.log(editData);
           
            var showData = [];
            $.each(editData, function (index, value) {
                showData.push(editData[index]);
            });
           
            console.log('showData' + showData);
           // $('#spnDependency').val(Data.length);
            var table = $('#divGraphDependsOnTask');
            table.empty;
            $(function () {
               // table.removeClass("hidden");
                var GridTable = table.dataTable({
                    destroy: true,
                    searching: true,
                    paging: false,
                    filter: true, // this is for disable filter (search box)
                    orderMulti: true, // for disable multiple column at once
                    pageLength: 1000,
                    bJQueryUI: true,
                    aaData: showData,
                    aoColumns: [
                            { mData: 'Id', autoWidth: false },
                            { mData: 'Location', autoWidth: false },
                            { mData: 'TeamName', autoWidth: false },
                            { mData: 'TaskName', autoWidth: false },
                            { mData: 'Status', autoWidth: false },
                            { mData: 'TaskAtLevel', autoWidth: false },
                            { mData: 'NextApprover', autoWidth: false }
                    ]
                });
            });
        }



        $.ajax({
            url: '/Report/GetWorkbasketItems?workbasketTaskId=' + WorkbasketTaskId + '&taskName=' + taskName + '&jtStartIndex=' + jtStartIndex + '&jtPageSize=' + jtPageSize + '&jtSorting=' + jtSorting,
            type: 'POST',
            dataType: 'json',
            data: { __RequestVerificationToken: $(tokenId).val() },
            success: function (data) {

     
                RecordsLoadedEvent(data.Records);

            },
            error: function () {
                $dfd.reject();
            }
        });
        //---document.ready ends here

        function RecordsLoadedEvent(records) {

            $("#moduleName").text("Task Details");
           

          //  document.getElementById("progress").style.display = 'none';
    
            $('#MultiWBTaskSubmit').hide();
        
            $('#accordion').show();
            $('#divBack').show();
            $('#divReconciliationFile').show();
            $('#divWorkbasket').show();
   

            //$('#divGraphActionHistory').jtable('load', { WorkbasketTaskId: records[0].Id });
            //$('#divGraphDependsOnTask').jtable('load', { WorkbasketTaskId: records[0].Id });


            $('#textGraphTaskId').val(records[0].Id);
            $('#textGraphTeam').val(records[0].TeamName);
            $('#textGraphTaskName').val(records[0].TaskName);
            $('#textGraphStatus').val(records[0].Status);
            $('#textGraphNextApprover').val(records[0].NextApprover);
            $('#textGraphCurrentLevel').val(records[0].TaskAtLevelText);
            $('#textGraphWorkflow').val(records[0].WorkflowName);
            $('#textGraphPeriod').val(records[0].PeriodName);
            $('#textGraphPriority').val(records[0].Priority);
            $('#textGraphDescription').val(records[0].Description);
            if (null != records[0].ActionsCanBeTakenAgainstWBTaskId) {
                $('#NoOfActionButtons').val(records[0].ActionsCanBeTakenAgainstWBTaskId.length);
            }
            if (null != records[0].RAGStatus && records[0].RAGStatus.replace(/ /g, '') == '@Enums.RAGStatus.G.ToString()') {

                $("#imgRagStatus").attr("class", "text-success indicator");
            }
            else if (null != records[0].RAGStatus && records[0].RAGStatus.replace(/ /g, '') == '@Enums.RAGStatus.R.ToString()') {
                $("#imgRagStatus").attr("class", "text-danger indicator");
            }
            else if (null != records[0].RAGStatus && records[0].RAGStatus.replace(/ /g, '') == '@Enums.RAGStatus.A.ToString()') {
                $("#imgRagStatus").attr("class", "text-warning indicator");
            }
            else { $("#imgRagStatus").attr("class", "indicator"); }
            //---end--load values ----------------------------

            //check if its last approval to avoid alert msg for next approver
            if ($('#IsLastApproval').length) {
                var IsLastApproval = (records[0].LastLevelForApproval == records[0].TaskAtLevel) ? true : false;
                $('#IsLastApproval').val(IsLastApproval);
            }
         
            //---Start rendering workFlowChart-------
         
          
        }
        var tokenId = '@Html.AntiForgeryToken()';
        var urlForChart = '@Url.Action("GetUsersLevelAssignmentForFlowChart", "Workbasket")';
        $('#divWorkflowChart').load(urlForChart, { workbasketTaskId: '@Model.WorkbasketTaskId', __RequestVerificationToken: $(tokenId).val() }, function () {
        });
    });
</script>
