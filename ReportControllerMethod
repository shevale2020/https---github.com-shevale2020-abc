 [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetWorkbasketItems(int workbasketTaskId, string taskName, int jtStartIndex, int jtPageSize, string jtSorting, string statusToGet, string userRole, int priorityId = 0)//, string periodId = null)
        {
          
            try
            {
                if (null == SessionWrapper.UserEntity)
                    return Json(new { Result = "ERROR", Message = Constants.ErrorSessionExpired });
                var TenantId = SessionWrapper.TenantId;
                UserEntity user = SessionWrapper.UserEntity;

                List<Workitems> workitemsList = new List<Workitems>();

                workitemsList = cls.GetWorkitems(TenantId, workbasketTaskId, taskName, user.UserID);//,jtSorting, jtStartIndex, jtPageSize, userRole, priorityId);

                if (workitemsList != null)
                {
                    return Json(new {  Records = workitemsList, Result = "OK", TotalRecordCount = workitemsList.Count > 0 ? workitemsList[0].TotalRecords : 0 });
                }
            }
            catch (Exception ex)
            {
                logger.Error(ex.ToString());
                return Json(new { Result = "ERROR", Message = ex.Message });
            }
            return Json(new { Result = "ERROR", Message = Constants.ErrorSessionExpired });
        }
