public List<dynamic> GetTaskTimelineChartReport(int LocationId, string PeriodText)
        {
            List<dynamic> result = (from WorkbasketTask in context.WorkbasketTasks
                                    join Period in context.Periods
                                    on WorkbasketTask.PeriodId equals Period.Id
                                    join PeriodDay in context.PeriodDays
                                    on Period.Id equals PeriodDay.PeriodId
                                    join WorkbasketTaskUsers in context.WorkbasketTaskUsers
                                    on WorkbasketTask.Id equals WorkbasketTaskUsers.WorkbasketTaskId
                                    join DependentTask in context.DependentTasks
                                    on WorkbasketTask.TaskId equals DependentTask.TaskId into DependentTaskinfo
                                    from DependentTask in DependentTaskinfo.DefaultIfEmpty()
                                    join Team in context.Teams
                                    on WorkbasketTask.TeamId equals Team.Id into teaminfo
                                    from Team in teaminfo.DefaultIfEmpty()
                                    join Task in context.Tasks
                                    on WorkbasketTask.TaskId equals Task.Id into taskinfo
                                    from Task in taskinfo.DefaultIfEmpty()
                                    where (WorkbasketTaskUsers.EndDateInt != null) && (DependentTask.DependentTaskId != null) && (WorkbasketTask.TeamId != null) && (WorkbasketTask.TaskId != null) && (Period.PeriodText == PeriodText) 
                                    //&& (Period.LocationId == LocationId) 
                                    group WorkbasketTask by new
                                    {
                                        WorkbasketTask.TeamId,
                                        Team.TeamName,
                                        Task.TaskName,
                                        WorkbasketTask.TaskId,
                                        DependentTask.DependentTaskId,
                                        WorkbasketTaskUsers.EndDateInt
                                    } into gcs
                                    select new
                                    {
                                        TeamId = gcs.Key.TeamId,
                                        TeamName = gcs.Key.TeamName,
                                        TaskName = gcs.Key.TaskName,
                                        TaskId = gcs.Key.TaskId,
                                        DependantTaskId = gcs.Key.DependentTaskId,
                                        EndDate = gcs.Max(x => gcs.Key.EndDateInt)
                                       // Day = (gcs.Max(x => gcs.Key.EndDateInt)).Value.Day
                                        //EndDate = gcs.Key.EndDateInt
                                    }).ToList<dynamic>();
            //List<dynamic> strlist = new List<dynamic>();
            //strlist.Add ("abc");
            return (result);
        }
